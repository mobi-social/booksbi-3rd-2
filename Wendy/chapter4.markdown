## 변수란?

- 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름
- 값의 위치를 가리키는 상징적인 이름
    - 하나의 값을 저장하기 위한 메커니즘이다. 단 배열이나 객체 같은 자료구조를 사용하면 여러개의 값을 그룹화 해서 하나의 값처럼 사용 가능.
    
    ```jsx
    //변수는 하나의 값을 저장하기 위한 수단이다.
    var userId = 1;
    var userName= 'choi';
    
    //여려개의 값을 하나로 그룹화해서 하나의 값처럼 사용 가능
    var user = {id:1, name: 'choi' };
    ```
    
- 변수에 값을 저장하는것을 **할당** (대입, 저장) 이라고 함
- 변수에 저장된 값을 읽어들이는것을 **참조** 라고함

## 식별자란?

- 어떤 값을 구별해서 식별할 수 있는 고유한 이름
- 식별자는 값이 아니라 **메모리주소를 기억** 한다.
- 메모리 상에 존재하는 어떤값을 식별할 수 있는 이름 모두를 뜻함

## 변수 선언

- 값을 저장하기 위한 메모리 공간을 확보하고 변수 이름과 확보된 메모리 공간의 주소를 연결→ 변수를 저장할수있게 해주는것
    - 변수 선언시 **var, let, const** 키워드를 사용한다.
- 변수 선언 후 변수에 값을 할당 하지 않으면 **undefined** 라는 값이 암묵적으로 할당된다.
- **⁉️  var**
    - var 키워드를 사용한 변수 선언은 선언단계와 초기화 단계가 동시에 진행된다.
    
    ```jsx
    var score;
    //선언단계를 통해 변수 이름 score 를 등록하고 
    //초기화 단계를 통해 score변수에 암묵적으로 undefined를 할당해 초기화한다.
    ```
    
    - 여기서 **초기화** 란 변수가 선언된 이후 최초로 값을 할당하는것

## 변수 선언 과 호이스팅

- 런타임 : 변수 선언이 소스코드가 한줄씩 순차적으로 실행되는 시점
- 호이스팅: 변수 선언문이 코드의 선두로 끌어 올려진것처럼 동작하는 자바스크립트 고유의 특징
    
    변수 선언은 소스코드가 순차적으로 실행되는 시점인 런타임 이전에 실행되지만 값의 할당은 소스코드가 순차적으로 실행되는 시점인 **런타임** 에 실행된다. 
    
    ```jsx
    console.log(score)// undefined
    
    var score; // 변수 선언 -> 런타임이전 실행
    score = 80; //값 할당 -> 런타임에 실행
    
    ```
    

## **값의 재할당**

- 재할당은 변수에 저장된 값을 다른 값으로 변경한다.
    
    *상수 : 값을 재할당 할 수 없어서 변수에저장된 값을 변결할 수 없음
    
- 만약 변수 score에 값을 80 ⇒ 90으로 재할당 하면 처음 값을 할당했던 80 메모리 공간은 나중에 ***가비지콜렉터*** 에 의해 메모리에서 자동 해제된다.

```jsx
	***가비지콜렉터??**
	
	가비지 콜랙터란 애플리케이션이 할당한 메모리 공간을 주기적으로 검사하여 더이상 사용되지
	않는 메모리를 해제하는 기능.
	
	자바스크립트는 가비지콜렉터를내장하고 있는 매니지드 언어로서 가비지 콜렉터를 통해
	메모리 누수를 방지한다.
```