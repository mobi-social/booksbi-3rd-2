# 8장 제어문

-   조건에 따라 코드 블록을 실행하거나 반복 실행할 때 사용한다

### 블록문

-   0개 이상의 문을 중괄호로 묶은 것으로, 코드 블록 또는 블록이라고 부르기도 한다.

### 조건문

-   주어진 조건식의 평가 결과에 따라 코드 블록의 실행을 결정한다
-   조건식은 불리언 값으로 평가될 수 있는 표현식이다

-   if...else문

    -   조건식의 평가 결과가 true일 경우 if문의 코드 블록이 실행되고, false일 경우 else문의 코드 불록이 실행된다

    ```
    if(조건식1){
        // 조건식1이 참이면 이 코드 블록이 실행된다
    }else if(조건식2){
        // 조건식2가 참이면 이 코드 블록이 실행된다
    }else{
        // 조건식1과 조건식2가 모두 거짓이면 이 코드 블록이 실행된다
    }
    ```

    -   대부분의 if...else문은 삼항 조건 연산자로 바꿔 쓸 수 있다

    ```
    var x = 2;
    var result;

    if(x % 2) {
        result = '홀수';
    }else{
        result = '짝수';
    }
    console.log(result);
    ```

    위 예제는 다음과 같이 상항 조건 연산자로 바꿔 쓸 수 있다

    ```
    var x = 2;

    // 0은 false로 취급된다
    var result = x % 2 ? '홀수' : '짝수';
    console.log(result); // 짝수
    ```

-   switch문
    -   주어진 표현식을 평가하여 그 값과 일치하는 표현식을 갖는 case문으로 실행 흐름을 옮긴다
    -   표현식과 일치하는 case문이 없다면 실행 순서는 default문으로 이동한다.
    ```
    switch(표현식){
        case 표현식1:
            switch문의 표현식과 표현식1이 일치하면 실행될 문;
            break;
        case 표현식2:
            switch문의 표현식과 표현식2가 일치하면 실행될 문;
            break;
        default:
            switch문의 표현식과 일치하는 case문이 없을 때 실행될 문;
    }
    ```

### 반복문

-   조건식의 평가 결과가 참인 경우 코드블록을 실행한다
-   그 후 조건식을 다시 평가하여 여전히 참인 경우 코드 블록을 다시 실행한다
-   이는 조건식이 거짓일 때까지 반복된다

-   for문

    -   조건식이 거짓으로 평가될 때까지 코드 블록을 반복 실행한다

    ```
    for (변수 선언문 또는 할당문; 조건식; 증감식){
        조건식이 참인 경우 실행될 문;
    }
    ```

-   while문

    -   주어진 조건식의 평가 결과가 참이면 코드 블록을 계속해서 반복 실행한다.
    -   for문은 반복 횟수가 명확할 때 주로 사용하고 while문은 반복 횟수가 불명확할 때 주로 사용한다.

    ```
    var count = 0;
    // count가 3보다 작을 때까지 코드 블록을 계속 반복 실행한다.
    while (count < 3){
        console.log(count);
        count++:
    }
    ```

-   do...while문

    -   코드 블록을 먼저 실행하고 조건식을 평가한다.
    -   코드 블록은 무조건 한 번 이상 실행된다

    ```
    var count = 0;
    do{
        console.log(count);
        count++;
    } while (count < 3);
    ```

-   break문

    -   switch 문과 while 문에서 살펴보았듯이 break 문은 코드 블록을 탈출한다

-   continue 문

    -   반복문의 코드 블록 실행을 현 지점에서 중단하고 반복문의 증감식으로 실행 흐름을 이동시킨다
    -   break 문처럼 반복문을 탈출하지는 않는다.

    ```
    var string = 'Hello World';
    var search = 'l';
    var count = 0;

    for(var i = 0; i < string.length; i++){
        if(string[i] !=== search) continue;
    }

    console.log(count);
    ```
